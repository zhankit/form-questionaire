# This is a basic workflow to help you get started with Actions

 name: Create an RC release

 # Controls when the workflow will run
 on:
   workflow_dispatch:
     inputs:
       version_name:
         description: 'Version name of the release candidate build'
         required: true
       release_thread_id:
         description: 'ID of the release discussion thread on the repo'
         required: true

 # A workflow run is made up of one or more jobs that can run sequentially or in parallel
 jobs:
   check_new_fixes:
     name: 'Check if new fixes are present in the thread since last run'
     runs-on: ubuntu-latest
     steps:
       - uses: octokit/graphql-action@v2.x
         id: get_release_thread
         with:
           mutation: |
             mutation {
               # input type: CreateDiscussionInput
               createDiscussion(input: {repositoryId: "1234", categoryId: "5678", body: "The body", title: "The title"}) {

                 # response type: CreateDiscussionPayload
                 discussion {
                   id
                 }
               }
             }
           repo: ${{ github.event.repository.name }}
           discussion_number: ${{ github.event.inputs.release_thread_id }}
         env:
           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
       - run: "echo api response: ${{ steps.get_release_thread.outputs.data }}"
