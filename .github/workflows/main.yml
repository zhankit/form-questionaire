# This is a basic workflow to help you get started with Actions
name: RC Release 

# Controls when the workflow will run
on:
  workflow_dispatch:
    inputs:
      prev_version_name:
        # i.e. v2.9.0, v7.39.0-rc1
        description: 'Version of the Previous Version'
        required: true
      version_name:
        # i.e. v3.0.0, v7.39.0-rc1
        description: 'Version of the release candidate build (RC)'
        required: true
      release_thread_id:
        description: 'ID of the release discussion thread on the repo'
        required: true
      conflunece_release_note:
        description: 'Confleunce Release note URL'
        required: true
        
# Workflow
jobs:
  build:
    name: RC Release
    runs-on: ubuntu-latest
    steps:
      # 1. Check out Code
      - name: Checkout code
        uses: actions/checkout@v2
        
      # 2. Check out Branch
      - name: Create Branch
        uses: peterjgrainger/action-create-branch@v2.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        with:
          # The branch to create
          branch: release/${{ github.event.inputs.version_name }}
        
      # 3. Create Release with details
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          repository: release/${{ github.event.inputs.version_name }}
          target: release/${{ github.event.inputs.version_name }}
          tag_name: release-${{ github.event.inputs.version_name }}
          release_name: v${{ github.event.inputs.version_name }}
          body: |
            Release notes:
            ${{ github.event.inputs.conflunece_release_note }}
            
            Release thread:
            https://github.com/MoneyLion/mobile-app/discussions/${{ github.event.inputs.release_thread_id }}
          draft: true
          prerelease: false
          
      # Checkout from master
      - name: Checkout from master
        shell: bash
        run: |
          # Update the version of the 
          REPLACE_ANDROID_VERSION_REGEX='s/versionName "${{ github.event.inputs.prev_version_name }}"/versionName "${{ github.event.inputs.version_name }}"/'
          sed $REPLACE_ANDROID_VERSION_REGEX ./android/app/build.gradle > build.gradle.tmp && mv build.gradle.tmp ./android/app/build.gradle
          
          REPLACE_IOS_VERSION_REGEX='s/MARKETING_VERSION = ${{ github.event.inputs.prev_version_name }}/MARKETING_VERSION = ${{ github.event.inputs.version_name }}/'
          sed $REPLACE_IOS_VERSION_REGEX ./ios/MoneyLion.xcodeproj/project.pbxproj > project.pbxproj.tmp && mv project.pbxproj.tmp ./ios/MoneyLion.xcodeproj/project.pbxproj

          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "Bump Up Application Version "
          git push
