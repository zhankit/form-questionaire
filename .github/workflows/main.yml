# RC Release Cutoff Automation
# https://moneylion.atlassian.net/wiki/spaces/Mobile/pages/3035169368/Streamlining+RC+release+process

name: RC Release Cutoff

# Controls when the workflow will run
on:
  workflow_dispatch:
    inputs:
      rc_version_name:
        # i.e. 7.39.0
        description: 'Current RC version (Semantic Versioning)'
        required: true
      new_staging_version_name:
        # i.e. 7.40.0
        description: 'New Staging version (Semantic Versioning)'
        required: true
      release_thread_id:
        description: 'Release discussion thread URL'
        required: true
      conflunece_release_note:
        description: 'Confleunce Release note URL'
        required: true
        
# Workflow
jobs:
  build:
    name: RC Release Cutoff
    runs-on: ubuntu-latest
    steps:
      # 1. Check out Code
      - name: Checkout code
        uses: actions/checkout@v2
        
      # 2. Check out Branch
      - name: Create Branch
        uses: peterjgrainger/action-create-branch@v2.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        with:
          # The branch to create
          branch: release/${{ github.event.inputs.rc_version_name }}
        
      # 3. Create Release with details
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          repository: release/${{ github.event.inputs.rc_version_name }}
          commitish: release/${{ github.event.inputs.rc_version_name }}
          tag_name: release/${{ github.event.inputs.rc_version_name }}
          release_name: v${{ github.event.inputs.rc_version_name }}
          body: |
            Release notes:
            ${{ github.event.inputs.conflunece_release_note }}
            
            Release thread:
            ${{ github.event.inputs.release_thread_id }}
          draft: true
          prerelease: false
          
      # Checkout from master
      - name: Checkout from master
        shell: bash
        run: |
          #!/usr/bin/env bash
          
          # Update the version 
          # 1. Android
          sed -i 's/versionName "${{ github.event.inputs.rc_version_name }}"/versionName "${{ github.event.inputs.new_staging_version_name }}"/g' ./android/app/build.gradle 
          
          # 2. iOS bundle
          sed -i 's/MARKETING_VERSION = ${{ github.event.inputs.rc_version_name }}/MARKETING_VERSION = ${{ github.event.inputs.new_staging_version_name }}/g' ./ios/MoneyLion.xcodeproj/project.pbxproj
          # Push commit to master
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "Bump app version number to ${{ github.event.inputs.new_staging_version_name }}"
          
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
          
      # 4. Automatically Rollback if failed
      - name: Rollback Release
        if: failure()
        uses: author/action-rollback@stable
        with:
          # Using a known release ID
          id: ${{ steps.create_release.id }}
          
          tag: release/${{ github.event.inputs.rc_version_name }}
          
          #  If the release does not exist but the tag does, setting this to true will remove the tag.
          delete_orphan_tag: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
